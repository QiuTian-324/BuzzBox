// Code generated by goctl. DO NOT EDIT.
// Source: like.proto

package like

import (
	"context"

	"BuzzBox/service/like/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	IsThumbsUpRequest  = pb.IsThumbsUpRequest
	IsThumbsUpResponse = pb.IsThumbsUpResponse
	ThumbsUpRequest    = pb.ThumbsUpRequest
	ThumbsUpResponse   = pb.ThumbsUpResponse
	UserThumbsUp       = pb.UserThumbsUp

	Like interface {
		ThumbsUp(ctx context.Context, in *ThumbsUpRequest, opts ...grpc.CallOption) (*ThumbsUpResponse, error)
		IsThumbsUp(ctx context.Context, in *IsThumbsUpRequest, opts ...grpc.CallOption) (*IsThumbsUpResponse, error)
	}

	defaultLike struct {
		cli zrpc.Client
	}
)

func NewLike(cli zrpc.Client) Like {
	return &defaultLike{
		cli: cli,
	}
}

func (m *defaultLike) ThumbsUp(ctx context.Context, in *ThumbsUpRequest, opts ...grpc.CallOption) (*ThumbsUpResponse, error) {
	client := pb.NewLikeClient(m.cli.Conn())
	return client.ThumbsUp(ctx, in, opts...)
}

func (m *defaultLike) IsThumbsUp(ctx context.Context, in *IsThumbsUpRequest, opts ...grpc.CallOption) (*IsThumbsUpResponse, error) {
	client := pb.NewLikeClient(m.cli.Conn())
	return client.IsThumbsUp(ctx, in, opts...)
}
